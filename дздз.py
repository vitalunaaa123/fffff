class Task:
    def __init__(self, title, description, deadline, status=False):
        self.title = title
        self.description = description
        self.deadline = deadline
        self.status = status  # False - –Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–æ, True - –≤–∏–∫–æ–Ω–∞–Ω–æ

    def mark_as_done(self):
        self.status = True

    def __str__(self):
        status = "‚úì" if self.status else "‚úó"
        return f"{status} {self.title} (–¥–æ {self.deadline})\n   {self.description}"


class TaskManager:
    def __init__(self):
        self.tasks = []

    def add_task(self, title, description, deadline):
        new_task = Task(title, description, deadline)
        self.tasks.append(new_task)
        print(f"\n –ó–∞–≤–¥–∞–Ω–Ω—è '{title}' –¥–æ–¥–∞–Ω–æ!")

    def remove_task(self, title):
        for task in self.tasks:
            if task.title.lower() == title.lower():
                self.tasks.remove(task)
                print(f"\nüóëÔ∏è –ó–∞–≤–¥–∞–Ω–Ω—è '{title}' –≤–∏–¥–∞–ª–µ–Ω–æ!")
                return
        print(f"\n –ó–∞–≤–¥–∞–Ω–Ω—è '{title}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

    def mark_task_as_done(self, title):
        for task in self.tasks:
            if task.title.lower() == title.lower():
                task.mark_as_done()
                print(f"\n –ó–∞–≤–¥–∞–Ω–Ω—è '{title}' –≤–∏–∫–æ–Ω–∞–Ω–æ!")
                return
        print(f"\n –ó–∞–≤–¥–∞–Ω–Ω—è '{title}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

    def show_all_tasks(self, filter_status=None):
        if not self.tasks:
            print("\n –°–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å –ø–æ—Ä–æ–∂–Ω—ñ–π")
            return

        print("\n –°–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å:")
        for i, task in enumerate(self.tasks, 1):
            if filter_status is None or task.status == filter_status:
                print(f"{i}. {task}")

    def show_pending_tasks(self):
        self.show_all_tasks(filter_status=False)


def main():
    manager = TaskManager()

    while True:
        print("\n" + "=" * 40)
        print("  –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≤–¥–∞–Ω—å")
        print("=" * 40)
        print("1. –î–æ–¥–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è")
        print("2. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è")
        print("3. –ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–µ–≤–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è")
        print("4. –í—ñ–¥–∑–Ω–∞—á–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ")
        print("5. –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è")
        print("0. –í–∏–π—Ç–∏")

        choice = input("\n–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é: ")

        if choice == "1":
            title = input("–ù–∞–∑–≤–∞ –∑–∞–≤–¥–∞–Ω–Ω—è: ")
            description = input("–û–ø–∏—Å: ")
            deadline = input("–î–µ–¥–ª–∞–π–Ω (–Ω–∞–ø—Ä. 2023-12-31): ")
            manager.add_task(title, description, deadline)

        elif choice == "2":
            manager.show_all_tasks()

        elif choice == "3":
            manager.show_pending_tasks()

        elif choice == "4":
            title = input("–ù–∞–∑–≤–∞ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –≤—ñ–¥–º—ñ—Ç–∫–∏: ")
            manager.mark_task_as_done(title)

        elif choice == "5":
            title = input("–ù–∞–∑–≤–∞ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ")
            manager.remove_task(title)

        elif choice == "0":
            print("\n –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
            break

        else:
            print("\n –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!")


if __name__ == "__main__":
    main()